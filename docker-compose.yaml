services:
  processing-service:
    container_name: processing-service
    build:
      context: ./processing-service
      dockerfile: Dockerfile
    image: localhost/processing-service:latest
    ports:
      - 8090:8090  
    networks:
      - myservice-net

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: localhost/api-gateway:latest
    environment:
      REDIS_CONNECT_URL: redis://default:redispw@redis-cache:6379
    volumes:
      - type: bind
        source: ./api-gateway/configs/nginx.conf
        target: /usr/local/openresty/nginx/conf/nginx.conf
      - type: bind
        source: ./api-gateway/configs/conf.d
        target: /etc/nginx/conf.d
      - type: bind
        source: ./api-gateway/lua
        target: /usr/local/openresty/nginx/lua
    ports:
      - 8080:8080
    networks:
      - myservice-net

  redis-cache:
    container_name: redis-cache
    image: redis:7.2.4
    command: ["redis-server", "/etc/redis/redis.conf"]
    ports:
      - 6379:6379
    volumes:
      - type: bind
        source: ./redis-cache/redis.conf
        target: /etc/redis/redis.conf
      - type: volume
        source: redis-cache-volume
        target: /data
    networks:
      - myservice-net

# helper container to add key for api auth after redis is up
  redis-cache-setup:
    container_name: redis-cache-setup
    image: redis:7.2.4
    depends_on:
      - redis-cache
    restart: "no"
    command: ["bash", "-c", "sleep 3 && redis-cli -h redis-cache -p 6379 -a redispw SET mysecurekey 0"]
    networks:
      - myservice-net

volumes:
  redis-cache-volume:

networks:
  myservice-net:
    driver: bridge
